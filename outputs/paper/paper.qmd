---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Robert Ford
thanks: "Code and data are available at: https://github.com/Ford-Robert/STA304_City-Of-Toronto-Data.git"
date: 27/09/2024
date-format: 27 September 2024
abstract: "This study analyzes ten years of delay data from the Toronto Transit Commission (TTC), focusing on subways, streetcars, and buses to assess changes in delay times of these services. The analysis found that buses experience the highest number of delays and the longest total and average delay times, while subway delays are resolved much faster on average. The analysis also delves into the specific challenges each service faces, analyzing which incidents they are most likely to experience and how long those incidents take to resolve. These findings provide data-driven insights for improving TTC operations and uncovering the specific challenges faced by each transportation mode."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(lubridate)
library(opendatatoronto)
library(tidyverse)
library(tidyr)
library(dplyr)
library(knitr)
library(ggplot2)
library(scales)
library(gridExtra)
library(patchwork)
```

```{r}
#| message: false
#| echo: false
#| warning: false
data <- read_csv(here::here("outputs/data/cleaned_dataset.csv"))

```



# Introduction{#sec-introduction}



# Data {#sec-data}

```{r num-incidents-by-mode}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: (left) Total Number of Incidents (right) Total Amount of Delay Time
#| fig-align: center

plot1 <- ggplot(data, aes(x = vehicle)) +
  geom_bar(fill = "steelblue") +
  scale_y_continuous(labels = comma) +
  labs(title = "Number of Incidents by Vehicle Type", x = "Vehicle Type", y = "Number of Incidents") +
  theme_minimal()

cumulative_delay <- data %>%
  group_by(vehicle) %>%
  summarise(total_delay = sum(Delay, na.rm = TRUE))


plot2 <- ggplot(cumulative_delay, aes(x = vehicle, y = total_delay)) +
  geom_bar(stat = "identity", fill = "tomato") +
  scale_y_continuous(labels = comma) +
  labs(title = "Cumulative Delay Time by Vehicle", x = "Vehicle Type", y = "Total Delay (Minutes)") +
  theme_minimal()

grid.arrange(plot1, plot2, ncol = 2)

```

```{r ave-delay-by-mode}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time by Vehicle Type
#| fig-align: center

average_delay <- data %>%
  group_by(vehicle) %>%
  summarise(avg_delay = mean(Delay, na.rm = TRUE))

ggplot(average_delay, aes(x = vehicle, y = avg_delay)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Average Delay Time by Vehicle Type", x = "Vehicle Type", y = "Average Delay (Minutes)") +
  theme_minimal()

```


```{r total-delay-incident}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time for Buses by, Incident Type
#| fig-align: center


# Step 1: Calculate total delay time for each incident type
data_incident_total_delay <- data %>%
  group_by(Incident) %>%
  summarise(total_delay = sum(Delay, na.rm = TRUE), .groups = 'drop') %>%
  mutate(Incident = fct_reorder(Incident, total_delay, .desc = TRUE))  # Reorder by total_delay

# Step 2: Create the bar chart for total delay time by incident type
ggplot(data_incident_total_delay, aes(x = Incident, y = total_delay)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Total Delay Time by Incident Type", 
       x = "Incident Type", y = "Total Delay Time (Minutes)") +
  scale_y_continuous(labels = comma) +  # Format y-axis labels to be whole numbers with commas
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10))

```


```{r ave-delay-by-incident}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time by Incident Type
#| fig-align: center

data_incident_avg_delay <- data %>%
  group_by(Incident) %>%
  summarise(avg_delay = mean(Delay, na.rm = TRUE), .groups = 'drop') %>%
  mutate(Incident = fct_reorder(Incident, avg_delay, .desc = TRUE))  # Reorder by avg_delay

# Create the bar chart
ggplot(data_incident_avg_delay, aes(x = Incident, y = avg_delay)) +
  geom_bar(stat = "identity", fill = "steelblue") +  # Set a single color for all bars
  labs(title = "Average Delay Time by Incident Type", 
       x = "Incident Type", y = "Average Delay (Minutes)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10))


data_incident_by_delay <- data %>%
  group_by(Incident, vehicle) %>%
  summarise(incident_count = n(), avg_delay = mean(Delay, na.rm = TRUE), .groups = 'drop') %>%
  group_by(Incident) %>%
  mutate(percentage = (incident_count / sum(incident_count)) * 100) %>%
  mutate(Incident = fct_reorder(Incident, avg_delay, .desc = TRUE))

```


```{r ave-delay-bus}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time for Buses by, Incident Type
#| fig-align: center


# Prepare the data: calculate the average delay time for each incident type and vehicle
data_incident_avg_delay <- data %>%
  group_by(vehicle, Incident) %>%
  summarise(avg_delay = mean(Delay, na.rm = TRUE), .groups = 'drop')

# Function to create a bar chart for a specific vehicle
create_bar_chart <- function(vehicle_type) {
  # Filter data for the specific vehicle type and reorder incidents by average delay
  vehicle_data <- data_incident_avg_delay %>%
    filter(vehicle == vehicle_type) %>%
    mutate(Incident = fct_reorder(Incident, avg_delay, .desc = TRUE))  # Reorder by avg_delay
  
  # Create the bar chart with uniform color and spread the x-axis labels
  ggplot(vehicle_data, aes(x = Incident, y = avg_delay)) +
    geom_bar(stat = "identity", fill = "steelblue") +  # Set a single color for all bars
    labs(title = paste("Average Delay by Incident Type for", vehicle_type),
         x = "Incident Type", y = "Average Delay (Minutes)") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10))  # Rotate labels for readability
}

# Generate the separate bar charts for each vehicle type
bus_bar_chart <- create_bar_chart("Bus")
bus_bar_chart

```


```{r ave-delay-streetcar}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time for Streetcars, by Incident Type
#| fig-align: center
streetcar_bar_chart <- create_bar_chart("Streetcar")
streetcar_bar_chart
```
```{r ave-delay-subway}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time for Subways, by Incident Type
#| fig-align: center

subway_bar_chart <- create_bar_chart("Subway")
subway_bar_chart

```


```{r ave-delay-days}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time by Day
#| fig-align: center
# Step 1: Extract the day of the week from the Date column and calculate average delay time by day of the week
data_avg_delay_by_day <- data %>%
  mutate(day_of_week = wday(Date, label = TRUE, abbr = FALSE)) %>%  # Extract day of the week from Date
  group_by(day_of_week) %>%
  summarise(avg_delay = mean(Delay, na.rm = TRUE), .groups = 'drop')

# Step 2: Create the bar chart for average delay by day of the week
ggplot(data_avg_delay_by_day, aes(x = day_of_week, y = avg_delay)) +
  geom_bar(stat = "identity", fill = "steelblue") +  # Vertical bars for average delay
  labs(title = "Average Delay Time by Day of the Week", 
       x = "Day of the Week", y = "Average Delay Time (Minutes)") +
  theme_minimal()

```


```{r ave-delay-months}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Amount of Delay Time by Month
#| fig-align: center

# Step 1: Extract the month from the Date column and calculate average delay time by month
data_avg_delay_by_month <- data %>%
  mutate(month = month(Date, label = TRUE, abbr = FALSE)) %>%  # Extract month from Date and get full month names
  group_by(month) %>%
  summarise(avg_delay = mean(Delay, na.rm = TRUE), .groups = 'drop')

# Step 2: Reorder the months to display them in chronological order
data_avg_delay_by_month <- data_avg_delay_by_month %>%
  mutate(month = factor(month, levels = month.name))  # Ensure months are ordered chronologically

# Step 3: Create the bar chart with switched axes
ggplot(data_avg_delay_by_month, aes(x = month, y = avg_delay)) +
  geom_bar(stat = "identity", fill = "steelblue") +  # Vertical bars with average delay
  labs(title = "Average Delay Time by Month", 
       x = "Month", y = "Average Delay Time (Minutes)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10))  # Rotate x-axis labels for readability
```

```{r incidents-over-time}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Number of Incidents Over Time
#| fig-align: center


data_inc_num <- data %>%
  group_by(month = floor_date(Date, "month"), vehicle) %>%
  summarise(incident_count = n())

# Create the line graph
ggplot(data_inc_num, aes(x = month, y = incident_count, color = vehicle, group = vehicle)) +
  geom_line(size = 1) +
  labs(title = "Number of Incidents Over Time by Vehicle", x = "Time", y = "Number of Incidents", color = "Vehicle Type") +
  theme_minimal()

```
```{r total-delay-time}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Total Delay Time from 2014 to 2024
#| fig-align: center
# Step 1: Convert the Date column to Date format (if it's not already) and group by month and vehicle type
data_total_delay_time <- data %>%
  mutate(Date = as.Date(Date)) %>%  # Ensure Date is in Date format
  group_by(month = floor_date(Date, "month"), vehicle) %>%  # Group by month and vehicle type
  summarise(total_delay = sum(Delay, na.rm = TRUE), .groups = 'drop')  # Summarize total delay

# Step 2: Create the line chart with 3 lines for each mode of transport
ggplot(data_total_delay_time, aes(x = month, y = total_delay, color = vehicle, group = vehicle)) +
  geom_line(size = 1) +  # Create the line chart with separate lines for each vehicle
  labs(title = "Total Incident Time by Mode of Transport (2014-2024)", 
       x = "Time", y = "Total Incident Time (Minutes)", color = "Vehicle Type") +
  theme_minimal() +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Format the x-axis with yearly labels
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

```

```{r delay-over-time}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Average Delay Time from 2014 to 2024
#| fig-align: center

data_monthly_delay <- data %>%
  group_by(month = floor_date(Date, "month"), vehicle) %>%
  summarise(average_delay = mean(Delay, na.rm = TRUE), .groups = 'drop')

# Create the line graph for monthly average delay times
ggplot(data_monthly_delay, aes(x = month, y = average_delay, color = vehicle, group = vehicle)) +
  geom_line(size = 1) +
  labs(title = "Average Delay Time Over Time by Vehicle (Monthly)", 
       x = "Time (Month)", y = "Average Delay Time (Minutes)", color = "Vehicle Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))



```



# Discussion {#sec-discussion}

## First discussion point {#sec-first-point}



## Second discussion point


## Third discussion point


## Weaknesses and next steps



\newpage


# References


